// colors.scss
// Define color variables here

/// wireframe colors
/// @author Google
/// @link https://www.google.com/design/spec/style/color.html
/// NOTE: this uses Google's Material Design color scheme - "Grey"
$grey-50:  #fafafa !default;
$grey-100: #f5f5f5 !default;
$grey-200: #eeeeee !default;
$grey-300: #e0e0e0 !default;
$grey-400: #bdbdbd !default;
$grey-500: #9e9e9e !default;
$grey-600: #757575 !default;
$grey-700: #616161 !default;
$grey-800: #424242 !default;
$grey-900: #212121 !default;

// base colors

// variables
$white: #fff !default;
$black: #262626 !default;

/// Color Map to define wireframe color-stack
/// @author Hmphry
/// @link http://hmphry.com/useful-sass-mixins
///
/// @example scss - usage
///     h1 {
///         color: color(wireframe);
///         border-color: color(wireframe, 200);
///         background: color(wireframe, 200, 0.4);
///     }
///
/// @example css - CSS output
///     h1 {
///         color: #fafafa; /* (default value of 'normal') */
///         border-color: #eeeeee;
///         background: rgba(238, 238, 238, 0.4);
///     }
///
/// TODO: Update with your color scheme and call the color() function too!
/// NOTE: Needs a trailing semi-colon on the last declaration!
$color-stack:
    (group: 'wireframe', id: normal, color: #fafafa),
    (group: 'wireframe', id: 100, color: #f5f5f5),
    (group: 'wireframe', id: 200, color: #eeeeee),
    (group: 'wireframe', id: 300, color: #e0e0e0),
    (group: 'wireframe', id: 400, color: #bdbdbd),
    (group: 'wireframe', id: 500, color: #9e9e9e),
    (group: 'wireframe', id: 600, color: #757575),
    (group: 'wireframe', id: 700, color: #616161),
    (group: 'wireframe', id: 800, color: #424242),
    (group: 'wireframe', id: 900, color: #212121),
    (group: 'wireframe', id: white, color: $white),
    (group: 'wireframe', id: black, color: $black);

// color function
@function color($group, $shade:normal, $transparency:1) {
    @each $color in $color-stack {
        $c-group: map-get($color, group);
        $c-shade: map-get($color, id);
        @if ($group == map-get($color, group) and $shade == map-get($color, id)) {
            @return rgba(map-get($color, color), $transparency);
        }
    }
}

// borders
$base-border-color: $grey-400 !default;

// bgs
$base-background-color: $white !default;
